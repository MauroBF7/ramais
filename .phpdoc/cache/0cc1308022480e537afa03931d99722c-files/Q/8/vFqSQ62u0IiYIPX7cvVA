1736123444
0cc1308022480e537afa03931d99722c-phpdoc%3A0112672b25433f9eb14139ba8f39354e-c1925a490c1d0d497486f2ee81241742
s:7820:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjk6ImluZGV4LnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJjMTkyNWE0OTBjMWQwZDQ5NzQ4NmYyZWU4MTI0MTc0MiI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjY0OiJ2ZW5kb3Ivc3ltZm9ueS9odHRwLWNsaWVudC1jb250cmFjdHMvVGVzdC9GaXh0dXJlcy93ZWIvaW5kZXgucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0OTI0OiI8P3BocAoKaWYgKCdjbGktc2VydmVyJyAhPT0gXFBIUF9TQVBJKSB7CiAgICAvLyBzYWZlIGd1YXJkIGFnYWluc3QgdW53YW50ZWQgZXhlY3V0aW9uCiAgICB0aHJvdyBuZXcgXEV4Y2VwdGlvbigiWW91IGNhbm5vdCBydW4gdGhpcyBzY3JpcHQgZGlyZWN0bHksIGl0J3MgYSBmaXh0dXJlIGZvciBUZXN0SHR0cFNlcnZlci4iKTsKfQoKJHZhcnMgPSBbXTsKCmlmICghJF9QT1NUKSB7CiAgICAkX1BPU1QgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cygncGhwOi8vaW5wdXQnKSwgdHJ1ZSk7CiAgICAkX1BPU1RbJ2NvbnRlbnQtdHlwZSddID0gJF9TRVJWRVJbJ0hUVFBfQ09OVEVOVF9UWVBFJ10gPz8gJz8nOwp9Cgpmb3JlYWNoICgkX1NFUlZFUiBhcyAkayA9PiAkdikgewogICAgc3dpdGNoICgkaykgewogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIGlmICghc3RyX3N0YXJ0c193aXRoKCRrLCAnSFRUUF8nKSkgewogICAgICAgICAgICAgICAgY29udGludWUgMjsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBubyBicmVhawogICAgICAgIGNhc2UgJ1NFUlZFUl9OQU1FJzoKICAgICAgICBjYXNlICdTRVJWRVJfUFJPVE9DT0wnOgogICAgICAgIGNhc2UgJ1JFUVVFU1RfVVJJJzoKICAgICAgICBjYXNlICdSRVFVRVNUX01FVEhPRCc6CiAgICAgICAgY2FzZSAnUEhQX0FVVEhfVVNFUic6CiAgICAgICAgY2FzZSAnUEhQX0FVVEhfUFcnOgogICAgICAgICAgICAkdmFyc1ska10gPSAkdjsKICAgIH0KfQoKJGpzb24gPSBqc29uX2VuY29kZSgkdmFycywgXEpTT05fUFJFVFRZX1BSSU5UIHwgXEpTT05fVU5FU0NBUEVEX1NMQVNIRVMgfCBcSlNPTl9VTkVTQ0FQRURfVU5JQ09ERSk7Cgpzd2l0Y2ggKCR2YXJzWydSRVFVRVNUX1VSSSddKSB7CiAgICBkZWZhdWx0OgogICAgICAgIGV4aXQ7CgogICAgY2FzZSAnL2hlYWQnOgogICAgICAgIGhlYWRlcignQ29udGVudC1MZW5ndGg6ICcuc3RybGVuKCRqc29uKSwgdHJ1ZSk7CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnLyc6CiAgICBjYXNlICcvP2E9YSZiPWInOgogICAgY2FzZSAnaHR0cDovLzEyNy4wLjAuMTo4MDU3Lyc6CiAgICBjYXNlICdodHRwOi8vbG9jYWxob3N0OjgwNTcvJzoKICAgICAgICBvYl9zdGFydCgnb2JfZ3poYW5kbGVyJyk7CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnLzEwMyc6CiAgICAgICAgaGVhZGVyKCdIVFRQLzEuMSAxMDMgRWFybHkgSGludHMnKTsKICAgICAgICBoZWFkZXIoJ0xpbms6IDwvc3R5bGUuY3NzPjsgcmVsPXByZWxvYWQ7IGFzPXN0eWxlJywgZmFsc2UpOwogICAgICAgIGhlYWRlcignTGluazogPC9zY3JpcHQuanM+OyByZWw9cHJlbG9hZDsgYXM9c2NyaXB0JywgZmFsc2UpOwogICAgICAgIGZsdXNoKCk7CiAgICAgICAgdXNsZWVwKDEwMDApOwogICAgICAgIGVjaG8gIkhUVFAvMS4xIDIwMCBPS1xyXG4iOwogICAgICAgIGVjaG8gIkRhdGU6IEZyaSwgMjYgTWF5IDIwMTcgMTA6MDI6MTEgR01UXHJcbiI7CiAgICAgICAgZWNobyAiQ29udGVudC1MZW5ndGg6IDEzXHJcbiI7CiAgICAgICAgZWNobyAiXHJcbiI7CiAgICAgICAgZWNobyAnSGVyZSB0aGUgYm9keSc7CiAgICAgICAgZXhpdDsKCiAgICBjYXNlICcvNDA0JzoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicsIHRydWUsIDQwNCk7CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnLzQwNC1nemlwcGVkJzoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogdGV4dC9wbGFpbicsIHRydWUsIDQwNCk7CiAgICAgICAgb2Jfc3RhcnQoJ29iX2d6aGFuZGxlcicpOwogICAgICAgIEBvYl9mbHVzaCgpOwogICAgICAgIGZsdXNoKCk7CiAgICAgICAgdXNsZWVwKDMwMDAwMCk7CiAgICAgICAgZWNobyAnc29tZSB0ZXh0JzsKICAgICAgICBleGl0OwoKICAgIGNhc2UgJy8zMDEnOgogICAgICAgIGlmICgnQmFzaWMgWm05dk9tSmhjZz09JyA9PT0gJHZhcnNbJ0hUVFBfQVVUSE9SSVpBVElPTiddKSB7CiAgICAgICAgICAgIGhlYWRlcignTG9jYXRpb246IGh0dHA6Ly8xMjcuMC4wLjE6ODA1Ny8zMDInLCB0cnVlLCAzMDEpOwogICAgICAgIH0KICAgICAgICBicmVhazsKCiAgICBjYXNlICcvMzAxL2JhZC10bGQnOgogICAgICAgIGhlYWRlcignTG9jYXRpb246IGh0dHA6Ly9mb28uZXhhbXBsZS4nLCB0cnVlLCAzMDEpOwogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJy8zMDEvaW52YWxpZCc6CiAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogLy8/Zm9vPWJhcicsIHRydWUsIDMwMSk7CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnLzMwMS9wcm94eSc6CiAgICBjYXNlICdodHRwOi8vbG9jYWxob3N0OjgwNTcvMzAxL3Byb3h5JzoKICAgIGNhc2UgJ2h0dHA6Ly8xMjcuMC4wLjE6ODA1Ny8zMDEvcHJveHknOgogICAgICAgIGhlYWRlcignTG9jYXRpb246IGh0dHA6Ly9sb2NhbGhvc3Q6ODA1Ny8nLCB0cnVlLCAzMDEpOwogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJy8zMDInOgogICAgICAgIGlmICghaXNzZXQoJHZhcnNbJ0hUVFBfQVVUSE9SSVpBVElPTiddKSkgewogICAgICAgICAgICBoZWFkZXIoJ0xvY2F0aW9uOiBodHRwOi8vbG9jYWxob3N0OjgwNTcvJywgdHJ1ZSwgMzAyKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnLzMwMi9yZWxhdGl2ZSc6CiAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogLi4nLCB0cnVlLCAzMDIpOwogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJy8zMDQnOgogICAgICAgIGhlYWRlcignQ29udGVudC1MZW5ndGg6IDEwJywgdHJ1ZSwgMzA0KTsKICAgICAgICBlY2hvICcxMjM0NSc7CgogICAgICAgIHJldHVybjsKCiAgICBjYXNlICcvMzA3JzoKICAgICAgICBoZWFkZXIoJ0xvY2F0aW9uOiBodHRwOi8vbG9jYWxob3N0OjgwNTcvcG9zdCcsIHRydWUsIDMwNyk7CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnL2xlbmd0aC1icm9rZW4nOgogICAgICAgIGhlYWRlcignQ29udGVudC1MZW5ndGg6IDEwMDAnKTsKICAgICAgICBicmVhazsKCiAgICBjYXNlICcvcG9zdCc6CiAgICAgICAgJG91dHB1dCA9IGpzb25fZW5jb2RlKCRfUE9TVCArIFsnUkVRVUVTVF9NRVRIT0QnID0+ICR2YXJzWydSRVFVRVNUX01FVEhPRCddXSwgXEpTT05fUFJFVFRZX1BSSU5UIHwgXEpTT05fVU5FU0NBUEVEX1NMQVNIRVMgfCBcSlNPTl9VTkVTQ0FQRURfVU5JQ09ERSk7CiAgICAgICAgaGVhZGVyKCdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nLCB0cnVlKTsKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtTGVuZ3RoOiAnLnN0cmxlbigkb3V0cHV0KSk7CiAgICAgICAgZWNobyAkb3V0cHV0OwogICAgICAgIGV4aXQ7CgogICAgY2FzZSAnL3RpbWVvdXQtaGVhZGVyJzoKICAgICAgICB1c2xlZXAoMzAwMDAwKTsKICAgICAgICBicmVhazsKCiAgICBjYXNlICcvdGltZW91dC1ib2R5JzoKICAgICAgICBlY2hvICc8MT4nOwogICAgICAgIEBvYl9mbHVzaCgpOwogICAgICAgIGZsdXNoKCk7CiAgICAgICAgdXNsZWVwKDUwMDAwMCk7CiAgICAgICAgZWNobyAnPDI+JzsKICAgICAgICBleGl0OwoKICAgIGNhc2UgJy90aW1lb3V0LWxvbmcnOgogICAgICAgIGlnbm9yZV91c2VyX2Fib3J0KGZhbHNlKTsKICAgICAgICBzbGVlcCgxKTsKICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICBlY2hvICc8MT4nOwogICAgICAgICAgICBAb2JfZmx1c2goKTsKICAgICAgICAgICAgZmx1c2goKTsKICAgICAgICAgICAgdXNsZWVwKDUwMCk7CiAgICAgICAgfQogICAgICAgIGV4aXQ7CgogICAgY2FzZSAnL2NodW5rZWQnOgogICAgICAgIGhlYWRlcignVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQnKTsKICAgICAgICBlY2hvICI4XHJcblN5bWZvbnkgXHJcbjVcclxuaXMgYXdcclxuNlxyXG5lc29tZSFcclxuMFxyXG5cclxuIjsKICAgICAgICBleGl0OwoKICAgIGNhc2UgJy9jaHVua2VkLWJyb2tlbic6CiAgICAgICAgaGVhZGVyKCdUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZCcpOwogICAgICAgIGVjaG8gIjhcclxuU3ltZm9ueSBcclxuNVxyXG5pcyBhd1xyXG42XHJcbmUiOwogICAgICAgIGV4aXQ7CgogICAgY2FzZSAnL2d6aXAtYnJva2VuJzoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtRW5jb2Rpbmc6IGd6aXAnKTsKICAgICAgICBlY2hvIHN0cl9yZXBlYXQoJy0nLCAxMDAwKTsKICAgICAgICBleGl0OwoKICAgIGNhc2UgJy9tYXgtZHVyYXRpb24nOgogICAgICAgIGlnbm9yZV91c2VyX2Fib3J0KGZhbHNlKTsKICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICBlY2hvICc8MT4nOwogICAgICAgICAgICBAb2JfZmx1c2goKTsKICAgICAgICAgICAgZmx1c2goKTsKICAgICAgICAgICAgdXNsZWVwKDUwMCk7CiAgICAgICAgfQogICAgICAgIGV4aXQ7CgogICAgY2FzZSAnL2pzb24nOgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyk7CiAgICAgICAgZWNobyBqc29uX2VuY29kZShbCiAgICAgICAgICAgICdkb2N1bWVudHMnID0+IFsKICAgICAgICAgICAgICAgIFsnaWQnID0+ICcvanNvbi8xJ10sCiAgICAgICAgICAgICAgICBbJ2lkJyA9PiAnL2pzb24vMiddLAogICAgICAgICAgICAgICAgWydpZCcgPT4gJy9qc29uLzMnXSwKICAgICAgICAgICAgXSwKICAgICAgICBdKTsKICAgICAgICBleGl0OwoKICAgIGNhc2UgJy9qc29uLzEnOgogICAgY2FzZSAnL2pzb24vMic6CiAgICBjYXNlICcvanNvbi8zJzoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicpOwogICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWwogICAgICAgICAgICAndGl0bGUnID0+ICR2YXJzWydSRVFVRVNUX1VSSSddLAogICAgICAgIF0pOwoKICAgICAgICBleGl0Owp9CgpoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicsIHRydWUpOwoKZWNobyAkanNvbjsKIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";