1736123448
0cc1308022480e537afa03931d99722c-phpdoc%3Aeb1c4fad556e68a8db3145574546d01c-26e44cd6bca5058d380577e3d80a6e12
s:7892:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjI2OiJwZXJtaXNzb2VzLW1vZGFsLmJsYWRlLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiIyNmU0NGNkNmJjYTUwNThkMzgwNTc3ZTNkODBhNmUxMiI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjkyOiJ2ZW5kb3IvdXNwZGV2L3NlbmhhdW5pY2Etc29jaWFsaXRlL3Jlc291cmNlcy92aWV3cy91c2Vycy9wYXJ0aWFscy9wZXJtaXNzb2VzLW1vZGFsLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDkzMToiCgpAc2VjdGlvbignamF2YXNjcmlwdHNfYm90dG9tJykKICBAcGFyZW50CiAgQG9uY2UKICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJzZW5oYXVuaWNhLXVzZXJzLXBlcm1pc3Npb24tbW9kYWwiIHRhYmluZGV4PSItMSI+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICA8aDUgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0ibW9kYWxMYWJlbCI+CiAgICAgICAgICAgICAgUHJlbWlzc8O1ZXMgZGUgPHNwYW4gY2xhc3M9ImZvbnQtd2VpZ2h0LWJvbGQgbmFtZSI+PC9zcGFuPgogICAgICAgICAgICA8L2g1PgogICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+CiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgPGZvcm0gY2xhc3M9IiIgbWV0aG9kPSJQT1NUIiBhY3Rpb249IiI+CiAgICAgICAgICAgICAgQGNzcmYKICAgICAgICAgICAgICBAbWV0aG9kKCdQVVQnKQogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgIEBpbmNsdWRlKCdzZW5oYXVuaWNhOjp1c2Vycy5wYXJ0aWFscy5wZXJtaXNzb2VzLW1vZGFsLWFwbGljYWNhbycpCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICAgICAgICAgICAgQGluY2x1ZGUoJ3NlbmhhdW5pY2E6OnVzZXJzLnBhcnRpYWxzLnBlcm1pc3NvZXMtbW9kYWwtcm9sZXMnKQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiI+CiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUoJ3NlbmhhdW5pY2E6OnVzZXJzLnBhcnRpYWxzLnBlcm1pc3NvZXMtbW9kYWwtaGllcmFycXVpY2EnKQogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSgnc2VuaGF1bmljYTo6dXNlcnMucGFydGlhbHMucGVybWlzc29lcy1tb2RhbC12aW5jdWxvJykKICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC0zIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsb2F0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1zZWNvbmRhcnkiIGRhdGEtZGlzbWlzcz0ibW9kYWwiPkNhbmNlbGFyPC9idXR0b24+CiAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tcHJpbWFyeSI+U2FsdmFyPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8L2Rpdj4KICBAZW5kb25jZQpAZW5kc2VjdGlvbgoKQHNlY3Rpb24oJ2phdmFzY3JpcHRzX2JvdHRvbScpCiAgQHBhcmVudAogIEBvbmNlCiAgICA8c2NyaXB0PgogICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKCiAgICAgICAgdmFyIHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbiA9ICQoJyNzZW5oYXVuaWNhLXVzZXJzLXBlcm1pc3Npb24tbW9kYWwnKQogICAgICAgIHZhciBoaWVyYXJxdWljYSA9IHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbi5maW5kKCcucGVybWlzc2FvLWhpZXJhcnF1aWNhJykuaHRtbCgpCgogICAgICAgICQoJy5zZW5oYXVuaWNhVXNlclBlcm1pc3Npb25CdG4nKS51bmJpbmQoKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHsKCiAgICAgICAgICB2YXIgcm91dGUgPSAkKHRoaXMpLmRhdGEoJ3JvdXRlJykKCiAgICAgICAgICAvLyBwZWdhIGRvIHNlcnZpZG9yIGRhZG9zIGRvIG1vZGVsIFVzZXIsIGluY2x1aW5kbyBwZXJtaXNzw7VlcwogICAgICAgICAgJC5nZXQocm91dGUsIGZ1bmN0aW9uKHVzZXIpIHsKICAgICAgICAgICAgdmFyIHVzZXJQZXJtaXNzaW9uU3RyaW5nID0gJycKICAgICAgICAgICAgY29uc29sZS5sb2codXNlcikKICAgICAgICAgICAgLy8gbGltcGFuZG8gb3MgY2hlY2tib3gKICAgICAgICAgICAgc2VuaGF1bmljYVVzZXJQZXJtaXNzaW9uLmZpbmQoJy5wZXJtaXNzYW8tYXBwJykuZmluZCgnaW5wdXQnKS5hdHRyKCdjaGVja2VkJywgZmFsc2UpCiAgICAgICAgICAgIHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbi5maW5kKCcucm9sZS1hcHAnKS5maW5kKCdpbnB1dCcpLmF0dHIoJ2NoZWNrZWQnLCBmYWxzZSkKCiAgICAgICAgICAgIHVzZXIucGVybWlzc2lvbnMuZm9yRWFjaChmdW5jdGlvbihwZXJtaXNzaW9uKSB7CiAgICAgICAgICAgICAgLy8gZm9ybWF0YW5kbyBzdHJpbmcgY29tIHBlcm1pc3PDtWVzIGRlIHZpbmN1bG8KICAgICAgICAgICAgICBpZiAocGVybWlzc2lvbi5ndWFyZF9uYW1lID09IHVzZXIudmluY3Vsb05zICYmIHVzZXIucGVybWlzc29lc1ZpbmN1bG8uaW5jbHVkZXMocGVybWlzc2lvbi5uYW1lLnNwbGl0KCcuJylbMF0pICkgewogICAgICAgICAgICAgICAgdXNlclBlcm1pc3Npb25TdHJpbmcgKz0gcGVybWlzc2lvbi5uYW1lICsgJywgJwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgLy8gcGVybWlzc29lcyBoaWVyYXJxdWljYXMKICAgICAgICAgICAgICBpZiAodXNlci5wZXJtaXNzb2VzSGllcmFycXVpYS5pbmNsdWRlcyhwZXJtaXNzaW9uLm5hbWUpICYmIHBlcm1pc3Npb24uZ3VhcmRfbmFtZSA9PSAne3sgQXBwXE1vZGVsc1xVc2VyOjokaGllcmFycXVpYU5zIH19JykgewogICAgICAgICAgICAgICAgaWYgKHVzZXIuZW52KSB7CiAgICAgICAgICAgICAgICAgIHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbi5maW5kKCcucGVybWlzc2FvLWhpZXJhcnF1aWNhJykuaHRtbCgKICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciI+JyArIHVzZXIuZW52ICsgJyAoZW52KTwvc3Bhbj4nKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgc2VuaGF1bmljYVVzZXJQZXJtaXNzaW9uLmZpbmQoJy5wZXJtaXNzYW8taGllcmFycXVpY2EnKS5odG1sKGhpZXJhcnF1aWNhKQogICAgICAgICAgICAgICAgICBzZW5oYXVuaWNhVXNlclBlcm1pc3Npb24KICAgICAgICAgICAgICAgICAgICAuZmluZCgnLnBlcm1pc3Nhby1oaWVyYXJxdWljYSBpbnB1dFt2YWx1ZT0nICsgcGVybWlzc2lvbi5uYW1lICsgJ10nKS5jbGljaygpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vdGVtIGRlIGFqdXN0YXIgYXF1aSBwYXJhIHBlZ2FyIG8gbWFpcyBhbHRvCgogICAgICAgICAgICAgIC8vIHBlcm1pc3NvZXMgZG8gYXBwOiB0aWNhbmRvIG8gY2hlY2tib3gKICAgICAgICAgICAgICBpZiAocGVybWlzc2lvbi5ndWFyZF9uYW1lID09ICd7eyBBcHBcTW9kZWxzXFVzZXI6OiRhcHBOcyB9fScpIHsKICAgICAgICAgICAgICAgIHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbgogICAgICAgICAgICAgICAgICAuZmluZCgnLnBlcm1pc3Nhby1hcHAgaW5wdXRbdmFsdWU9IicgKyBwZXJtaXNzaW9uLm5hbWUgKyAnIl0nKS5hdHRyKCdjaGVja2VkJywgdHJ1ZSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCgogICAgICAgICAgICB1c2VyLnJvbGVzLmZvckVhY2goZnVuY3Rpb24ocm9sZSkgewogICAgICAgICAgICAgIC8vIHJvbGVzIGRvIGFwcDogdGljYW5kbyBvIGNoZWNrYm94CiAgICAgICAgICAgICAgaWYgKHJvbGUuZ3VhcmRfbmFtZSA9PSAne3sgQXBwXE1vZGVsc1xVc2VyOjokYXBwTnMgfX0nKSB7CiAgICAgICAgICAgICAgICBzZW5oYXVuaWNhVXNlclBlcm1pc3Npb24KICAgICAgICAgICAgICAgICAgLmZpbmQoJy5yb2xlLWFwcCBpbnB1dFt2YWx1ZT0iJyArIHJvbGUubmFtZSArICciXScpLmF0dHIoJ2NoZWNrZWQnLCB0cnVlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKCiAgICAgICAgICAgIC8vbW9zdHJhbmRvIGEgc3RyaW5nIGRhcyBwZXJtaXNzb2VzLXZpbmN1bG8KICAgICAgICAgICAgc2VuaGF1bmljYVVzZXJQZXJtaXNzaW9uLmZpbmQoJy5wZXJtaXNzb2VzLXZpbmN1bG8nKQogICAgICAgICAgICAgIC5odG1sKHVzZXJQZXJtaXNzaW9uU3RyaW5nLnN1YnN0cmluZygwLCB1c2VyUGVybWlzc2lvblN0cmluZy5sZW5ndGggLSAyKSkKCiAgICAgICAgICAgIC8vIHNldGFuZG8gbyBhY3Rpb24gY29tIGEgcm90YSBjb3JyZXRhCiAgICAgICAgICAgIHNlbmhhdW5pY2FVc2VyUGVybWlzc2lvbi5maW5kKCdmb3JtJykuYXR0cignYWN0aW9uJywgcm91dGUpCiAgICAgICAgICAgIC8vIGNvbG9jYW5kbyBvIG5vbWUgbm8gdG9wbyBkbyBtb2RhbAogICAgICAgICAgICBzZW5oYXVuaWNhVXNlclBlcm1pc3Npb24uZmluZCgnLm5hbWUnKS5odG1sKHVzZXIubmFtZSkKICAgICAgICAgICAgLy8gYXRpdmFuZG8gbW9kYWwKICAgICAgICAgICAgc2VuaGF1bmljYVVzZXJQZXJtaXNzaW9uLm1vZGFsKCkKCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgIH0pCiAgICA8L3NjcmlwdD4KICBAZW5kb25jZQpAZW5kc2VjdGlvbgoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";