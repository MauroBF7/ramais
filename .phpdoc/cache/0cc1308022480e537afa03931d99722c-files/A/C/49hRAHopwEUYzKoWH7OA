1736123416
0cc1308022480e537afa03931d99722c-phpdoc%3A96bcdf63bb45eed7b60eb0f2cf155920-d449254e1b20960701f5c55e74227e6d
s:5912:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjg6Im1haWwucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ0NDkyNTRlMWIyMDk2MDcwMWY1YzU1ZTc0MjI3ZTZkIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTU6ImNvbmZpZy9tYWlsLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzU0MzoiPD9waHAKCnJldHVybiBbCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBEZWZhdWx0IE1haWxlcgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8CiAgICB8IFRoaXMgb3B0aW9uIGNvbnRyb2xzIHRoZSBkZWZhdWx0IG1haWxlciB0aGF0IGlzIHVzZWQgdG8gc2VuZCBhbnkgZW1haWwKICAgIHwgbWVzc2FnZXMgc2VudCBieSB5b3VyIGFwcGxpY2F0aW9uLiBBbHRlcm5hdGl2ZSBtYWlsZXJzIG1heSBiZSBzZXR1cAogICAgfCBhbmQgdXNlZCBhcyBuZWVkZWQ7IGhvd2V2ZXIsIHRoaXMgbWFpbGVyIHdpbGwgYmUgdXNlZCBieSBkZWZhdWx0LgogICAgfAogICAgKi8KCiAgICAnZGVmYXVsdCcgPT4gZW52KCdNQUlMX01BSUxFUicsICdzbXRwJyksCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBNYWlsZXIgQ29uZmlndXJhdGlvbnMKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBIZXJlIHlvdSBtYXkgY29uZmlndXJlIGFsbCBvZiB0aGUgbWFpbGVycyB1c2VkIGJ5IHlvdXIgYXBwbGljYXRpb24gcGx1cwogICAgfCB0aGVpciByZXNwZWN0aXZlIHNldHRpbmdzLiBTZXZlcmFsIGV4YW1wbGVzIGhhdmUgYmVlbiBjb25maWd1cmVkIGZvcgogICAgfCB5b3UgYW5kIHlvdSBhcmUgZnJlZSB0byBhZGQgeW91ciBvd24gYXMgeW91ciBhcHBsaWNhdGlvbiByZXF1aXJlcy4KICAgIHwKICAgIHwgTGFyYXZlbCBzdXBwb3J0cyBhIHZhcmlldHkgb2YgbWFpbCAidHJhbnNwb3J0IiBkcml2ZXJzIHRvIGJlIHVzZWQgd2hpbGUKICAgIHwgc2VuZGluZyBhbiBlLW1haWwuIFlvdSB3aWxsIHNwZWNpZnkgd2hpY2ggb25lIHlvdSBhcmUgdXNpbmcgZm9yIHlvdXIKICAgIHwgbWFpbGVycyBiZWxvdy4gWW91IGFyZSBmcmVlIHRvIGFkZCBhZGRpdGlvbmFsIG1haWxlcnMgYXMgcmVxdWlyZWQuCiAgICB8CiAgICB8IFN1cHBvcnRlZDogInNtdHAiLCAic2VuZG1haWwiLCAibWFpbGd1biIsICJzZXMiLAogICAgfCAgICAgICAgICAgICJwb3N0bWFyayIsICJsb2ciLCAiYXJyYXkiLCAiZmFpbG92ZXIiCiAgICB8CiAgICAqLwoKICAgICdtYWlsZXJzJyA9PiBbCiAgICAgICAgJ3NtdHAnID0+IFsKICAgICAgICAgICAgJ3RyYW5zcG9ydCcgPT4gJ3NtdHAnLAogICAgICAgICAgICAnaG9zdCcgPT4gZW52KCdNQUlMX0hPU1QnLCAnc210cC5tYWlsZ3VuLm9yZycpLAogICAgICAgICAgICAncG9ydCcgPT4gZW52KCdNQUlMX1BPUlQnLCA1ODcpLAogICAgICAgICAgICAnZW5jcnlwdGlvbicgPT4gZW52KCdNQUlMX0VOQ1JZUFRJT04nLCAndGxzJyksCiAgICAgICAgICAgICd1c2VybmFtZScgPT4gZW52KCdNQUlMX1VTRVJOQU1FJyksCiAgICAgICAgICAgICdwYXNzd29yZCcgPT4gZW52KCdNQUlMX1BBU1NXT1JEJyksCiAgICAgICAgICAgICd0aW1lb3V0JyA9PiBudWxsCiAgICAgICAgXSwKCiAgICAgICAgJ3NlcycgPT4gWwogICAgICAgICAgICAndHJhbnNwb3J0JyA9PiAnc2VzJywKICAgICAgICBdLAoKICAgICAgICAnbWFpbGd1bicgPT4gWwogICAgICAgICAgICAndHJhbnNwb3J0JyA9PiAnbWFpbGd1bicsCiAgICAgICAgXSwKCiAgICAgICAgJ3Bvc3RtYXJrJyA9PiBbCiAgICAgICAgICAgICd0cmFuc3BvcnQnID0+ICdwb3N0bWFyaycsCiAgICAgICAgXSwKCiAgICAgICAgJ3NlbmRtYWlsJyA9PiBbCiAgICAgICAgICAgICd0cmFuc3BvcnQnID0+ICdzZW5kbWFpbCcsCiAgICAgICAgICAgICdwYXRoJyA9PiBlbnYoJ01BSUxfU0VORE1BSUxfUEFUSCcsICcvdXNyL3NiaW4vc2VuZG1haWwgLXQgLWknKSwKICAgICAgICBdLAoKICAgICAgICAnbG9nJyA9PiBbCiAgICAgICAgICAgICd0cmFuc3BvcnQnID0+ICdsb2cnLAogICAgICAgICAgICAnY2hhbm5lbCcgPT4gZW52KCdNQUlMX0xPR19DSEFOTkVMJyksCiAgICAgICAgXSwKCiAgICAgICAgJ2FycmF5JyA9PiBbCiAgICAgICAgICAgICd0cmFuc3BvcnQnID0+ICdhcnJheScsCiAgICAgICAgXSwKCiAgICAgICAgJ2ZhaWxvdmVyJyA9PiBbCiAgICAgICAgICAgICd0cmFuc3BvcnQnID0+ICdmYWlsb3ZlcicsCiAgICAgICAgICAgICdtYWlsZXJzJyA9PiBbCiAgICAgICAgICAgICAgICAnc210cCcsCiAgICAgICAgICAgICAgICAnbG9nJywKICAgICAgICAgICAgXSwKICAgICAgICBdLAogICAgXSwKCiAgICAvKgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8IEdsb2JhbCAiRnJvbSIgQWRkcmVzcwogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8CiAgICB8IFlvdSBtYXkgd2lzaCBmb3IgYWxsIGUtbWFpbHMgc2VudCBieSB5b3VyIGFwcGxpY2F0aW9uIHRvIGJlIHNlbnQgZnJvbQogICAgfCB0aGUgc2FtZSBhZGRyZXNzLiBIZXJlLCB5b3UgbWF5IHNwZWNpZnkgYSBuYW1lIGFuZCBhZGRyZXNzIHRoYXQgaXMKICAgIHwgdXNlZCBnbG9iYWxseSBmb3IgYWxsIGUtbWFpbHMgdGhhdCBhcmUgc2VudCBieSB5b3VyIGFwcGxpY2F0aW9uLgogICAgfAogICAgKi8KCiAgICAnZnJvbScgPT4gWwogICAgICAgICdhZGRyZXNzJyA9PiBlbnYoJ01BSUxfRlJPTV9BRERSRVNTJywgJ2hlbGxvQGV4YW1wbGUuY29tJyksCiAgICAgICAgJ25hbWUnID0+IGVudignTUFJTF9GUk9NX05BTUUnLCAnRXhhbXBsZScpLAogICAgXSwKCiAgICAvKgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8IE1hcmtkb3duIE1haWwgU2V0dGluZ3MKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBJZiB5b3UgYXJlIHVzaW5nIE1hcmtkb3duIGJhc2VkIGVtYWlsIHJlbmRlcmluZywgeW91IG1heSBjb25maWd1cmUgeW91cgogICAgfCB0aGVtZSBhbmQgY29tcG9uZW50IHBhdGhzIGhlcmUsIGFsbG93aW5nIHlvdSB0byBjdXN0b21pemUgdGhlIGRlc2lnbgogICAgfCBvZiB0aGUgZW1haWxzLiBPciwgeW91IG1heSBzaW1wbHkgc3RpY2sgd2l0aCB0aGUgTGFyYXZlbCBkZWZhdWx0cyEKICAgIHwKICAgICovCgogICAgJ21hcmtkb3duJyA9PiBbCiAgICAgICAgJ3RoZW1lJyA9PiAnZGVmYXVsdCcsCgogICAgICAgICdwYXRocycgPT4gWwogICAgICAgICAgICByZXNvdXJjZV9wYXRoKCd2aWV3cy92ZW5kb3IvbWFpbCcpLAogICAgICAgIF0sCiAgICBdLAoKXTsKIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";