1736123433
0cc1308022480e537afa03931d99722c-phpdoc%3A0a29f78807ae2251ea860f6b18c85e39-8106d5b2ca4321e6d529d39b5f180bf0
s:7888:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjY6InRyLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiI4MTA2ZDViMmNhNDMyMWU2ZDUyOWQzOWI1ZjE4MGJmMCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQzOiJ2ZW5kb3IvbmVzYm90L2NhcmJvbi9zcmMvQ2FyYm9uL0xhbmcvdHIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozOTg3OiI8P3BocAoKLyoqCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDYXJib24gcGFja2FnZS4KICoKICogKGMpIEJyaWFuIE5lc2JpdHQgPGJyaWFuQG5lc2JvdC5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCi8qCiAqIEF1dGhvcnM6CiAqIC0gSm9zaCBTb3JlZgogKiAtIEFsYW4gQWdpdXMKICogLSBFcmhhbiBHdW5kb2dhbgogKiAtIEZyYW7Dp29pcyBCCiAqIC0gSkQgSXNhYWNrcwogKiAtIE11cmF0IFnDvGtzZWwKICogLSBCYXJhbiDFnmVuZ8O8bAogKiAtIFNlbGFtaSAoc2VsYW1pYWx0aW4pCiAqIC0gVGVvbWFuQmV5CiAqLwpyZXR1cm4gWwogICAgJ3llYXInID0+ICc6Y291bnQgecSxbCcsCiAgICAnYV95ZWFyJyA9PiAnezF9YmlyIHnEsWx8XTEsSW5mWzpjb3VudCB5xLFsJywKICAgICd5JyA9PiAnOmNvdW50eScsCiAgICAnbW9udGgnID0+ICc6Y291bnQgYXknLAogICAgJ2FfbW9udGgnID0+ICd7MX1iaXIgYXl8XTEsSW5mWzpjb3VudCBheScsCiAgICAnbScgPT4gJzpjb3VudGF5JywKICAgICd3ZWVrJyA9PiAnOmNvdW50IGhhZnRhJywKICAgICdhX3dlZWsnID0+ICd7MX1iaXIgaGFmdGF8XTEsSW5mWzpjb3VudCBoYWZ0YScsCiAgICAndycgPT4gJzpjb3VudGgnLAogICAgJ2RheScgPT4gJzpjb3VudCBnw7xuJywKICAgICdhX2RheScgPT4gJ3sxfWJpciBnw7xufF0xLEluZls6Y291bnQgZ8O8bicsCiAgICAnZCcgPT4gJzpjb3VudGcnLAogICAgJ2hvdXInID0+ICc6Y291bnQgc2FhdCcsCiAgICAnYV9ob3VyJyA9PiAnezF9YmlyIHNhYXR8XTEsSW5mWzpjb3VudCBzYWF0JywKICAgICdoJyA9PiAnOmNvdW50c2EnLAogICAgJ21pbnV0ZScgPT4gJzpjb3VudCBkYWtpa2EnLAogICAgJ2FfbWludXRlJyA9PiAnezF9YmlyIGRha2lrYXxdMSxJbmZbOmNvdW50IGRha2lrYScsCiAgICAnbWluJyA9PiAnOmNvdW50ZGsnLAogICAgJ3NlY29uZCcgPT4gJzpjb3VudCBzYW5peWUnLAogICAgJ2Ffc2Vjb25kJyA9PiAnezF9Ymlya2HDpyBzYW5peWV8XTEsSW5mWzpjb3VudCBzYW5peWUnLAogICAgJ3MnID0+ICc6Y291bnRzbicsCiAgICAnYWdvJyA9PiAnOnRpbWUgw7ZuY2UnLAogICAgJ2Zyb21fbm93JyA9PiAnOnRpbWUgc29ucmEnLAogICAgJ2FmdGVyJyA9PiAnOnRpbWUgc29ucmEnLAogICAgJ2JlZm9yZScgPT4gJzp0aW1lIMO2bmNlJywKICAgICdkaWZmX25vdycgPT4gJ8WfaW1kaScsCiAgICAnZGlmZl90b2RheScgPT4gJ2J1Z8O8bicsCiAgICAnZGlmZl90b2RheV9yZWdleHAnID0+ICdidWfDvG4oPzpcXHMrc2FhdCk/JywKICAgICdkaWZmX3llc3RlcmRheScgPT4gJ2TDvG4nLAogICAgJ2RpZmZfdG9tb3Jyb3cnID0+ICd5YXLEsW4nLAogICAgJ2RpZmZfdG9tb3Jyb3dfcmVnZXhwJyA9PiAneWFyxLFuKD86XFxzK3NhYXQpPycsCiAgICAnZGlmZl9iZWZvcmVfeWVzdGVyZGF5JyA9PiAnZXZ2ZWxzaSBnw7xuJywKICAgICdkaWZmX2FmdGVyX3RvbW9ycm93JyA9PiAnw7Ziw7xyIGfDvG4nLAogICAgJ2Zvcm1hdHMnID0+IFsKICAgICAgICAnTFQnID0+ICdISDptbScsCiAgICAgICAgJ0xUUycgPT4gJ0hIOm1tOnNzJywKICAgICAgICAnTCcgPT4gJ0RELk1NLllZWVknLAogICAgICAgICdMTCcgPT4gJ0QgTU1NTSBZWVlZJywKICAgICAgICAnTExMJyA9PiAnRCBNTU1NIFlZWVkgSEg6bW0nLAogICAgICAgICdMTExMJyA9PiAnZGRkZCwgRCBNTU1NIFlZWVkgSEg6bW0nLAogICAgXSwKICAgICdjYWxlbmRhcicgPT4gWwogICAgICAgICdzYW1lRGF5JyA9PiAnW2J1Z8O8biBzYWF0XSBMVCcsCiAgICAgICAgJ25leHREYXknID0+ICdbeWFyxLFuIHNhYXRdIExUJywKICAgICAgICAnbmV4dFdlZWsnID0+ICdbZ2VsZWNla10gZGRkZCBbc2FhdF0gTFQnLAogICAgICAgICdsYXN0RGF5JyA9PiAnW2TDvG5dIExUJywKICAgICAgICAnbGFzdFdlZWsnID0+ICdbZ2XDp2VuXSBkZGRkIFtzYWF0XSBMVCcsCiAgICAgICAgJ3NhbWVFbHNlJyA9PiAnTCcsCiAgICBdLAogICAgJ29yZGluYWwnID0+IHN0YXRpYyBmdW5jdGlvbiAoJG51bWJlciwgJHBlcmlvZCkgewogICAgICAgIHN3aXRjaCAoJHBlcmlvZCkgewogICAgICAgICAgICBjYXNlICdkJzoKICAgICAgICAgICAgY2FzZSAnRCc6CiAgICAgICAgICAgIGNhc2UgJ0RvJzoKICAgICAgICAgICAgY2FzZSAnREQnOgogICAgICAgICAgICAgICAgcmV0dXJuICRudW1iZXI7CiAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICBpZiAoJG51bWJlciA9PT0gMCkgeyAgLy8gc3BlY2lhbCBjYXNlIGZvciB6ZXJvCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICIkbnVtYmVyJ8SxbmPEsSI7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgc3RhdGljICRzdWZmaXhlcyA9IFsKICAgICAgICAgICAgICAgICAgICAxID0+ICdcJ2luY2knLAogICAgICAgICAgICAgICAgICAgIDUgPT4gJ1wnaW5jaScsCiAgICAgICAgICAgICAgICAgICAgOCA9PiAnXCdpbmNpJywKICAgICAgICAgICAgICAgICAgICA3MCA9PiAnXCdpbmNpJywKICAgICAgICAgICAgICAgICAgICA4MCA9PiAnXCdpbmNpJywKICAgICAgICAgICAgICAgICAgICAyID0+ICdcJ25jaScsCiAgICAgICAgICAgICAgICAgICAgNyA9PiAnXCduY2knLAogICAgICAgICAgICAgICAgICAgIDIwID0+ICdcJ25jaScsCiAgICAgICAgICAgICAgICAgICAgNTAgPT4gJ1wnbmNpJywKICAgICAgICAgICAgICAgICAgICAzID0+ICdcJ8O8bmPDvCcsCiAgICAgICAgICAgICAgICAgICAgNCA9PiAnXCfDvG5jw7wnLAogICAgICAgICAgICAgICAgICAgIDEwMCA9PiAnXCfDvG5jw7wnLAogICAgICAgICAgICAgICAgICAgIDYgPT4gJ1wnbmPEsScsCiAgICAgICAgICAgICAgICAgICAgOSA9PiAnXCd1bmN1JywKICAgICAgICAgICAgICAgICAgICAxMCA9PiAnXCd1bmN1JywKICAgICAgICAgICAgICAgICAgICAzMCA9PiAnXCd1bmN1JywKICAgICAgICAgICAgICAgICAgICA2MCA9PiAnXCfEsW5jxLEnLAogICAgICAgICAgICAgICAgICAgIDkwID0+ICdcJ8SxbmPEsScsCiAgICAgICAgICAgICAgICBdOwoKICAgICAgICAgICAgICAgICRsYXN0RGlnaXQgPSAkbnVtYmVyICUgMTA7CgogICAgICAgICAgICAgICAgcmV0dXJuICRudW1iZXIuKCRzdWZmaXhlc1skbGFzdERpZ2l0XSA/PyAkc3VmZml4ZXNbJG51bWJlciAlIDEwMCAtICRsYXN0RGlnaXRdID8/ICRzdWZmaXhlc1skbnVtYmVyID49IDEwMCA/IDEwMCA6IC0xXSA/PyAnJyk7CiAgICAgICAgfQogICAgfSwKICAgICdtZXJpZGllbScgPT4gWyfDlsOWJywgJ8OWUycsICfDtsO2JywgJ8O2cyddLAogICAgJ21vbnRocycgPT4gWydPY2FrJywgJ8WedWJhdCcsICdNYXJ0JywgJ05pc2FuJywgJ01hecSxcycsICdIYXppcmFuJywgJ1RlbW11eicsICdBxJ91c3RvcycsICdFeWzDvGwnLCAnRWtpbScsICdLYXPEsW0nLCAnQXJhbMSxayddLAogICAgJ21vbnRoc19zaG9ydCcgPT4gWydPY2EnLCAnxZ51YicsICdNYXInLCAnTmlzJywgJ01heScsICdIYXonLCAnVGVtJywgJ0HEn3UnLCAnRXlsJywgJ0VraScsICdLYXMnLCAnQXJhJ10sCiAgICAnd2Vla2RheXMnID0+IFsnUGF6YXInLCAnUGF6YXJ0ZXNpJywgJ1NhbMSxJywgJ8OHYXLFn2FtYmEnLCAnUGVyxZ9lbWJlJywgJ0N1bWEnLCAnQ3VtYXJ0ZXNpJ10sCiAgICAnd2Vla2RheXNfc2hvcnQnID0+IFsnUGF6JywgJ1B0cycsICdTYWwnLCAnw4dhcicsICdQZXInLCAnQ3VtJywgJ0N0cyddLAogICAgJ3dlZWtkYXlzX21pbicgPT4gWydQeicsICdQdCcsICdTYScsICfDh2EnLCAnUGUnLCAnQ3UnLCAnQ3QnXSwKICAgICdmaXJzdF9kYXlfb2Zfd2VlaycgPT4gMSwKICAgICdkYXlfb2ZfZmlyc3Rfd2Vla19vZl95ZWFyJyA9PiAxLAogICAgJ2xpc3QnID0+IFsnLCAnLCAnIHZlICddLApdOwoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjQwOiJUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ2FyYm9uIHBhY2thZ2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE1ODoiKGMpIEJyaWFuIE5lc2JpdHQgPGJyaWFuQG5lc2JvdC5jb20+CgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";